single_input
(NEWLINE|stmt)
file_input
eval_input
(arglist)
('('(arglist)?')')
decorator
decorators
(classdef|funcdef|async_funcdef)
decorated
async_funcdef
NAME
('->'test)
funcdef
(typedargslist)
parameters
('='test)
(','tfpdef('='test)?)
(tfpdef)
(',')
('**'tfpdef(',')?)
(','('**'tfpdef(',')?)?)
('*'(tfpdef)?(','tfpdef('='test)?)*(','('**'tfpdef(',')?)?)?|'**'tfpdef(',')?) => :: star_param_expr
(','('*'(tfpdef)?(','tfpdef('='test)?)*(','('**'tfpdef(',')?)?)?|'**'tfpdef(',')?)?)
(tfpdef('='test)?(','tfpdef('='test)?)*(','('*'(tfpdef)?(','tfpdef('='test)?)*(','('**'tfpdef(',')?)?)?|'**'tfpdef(',')?)?)?|'*'(tfpdef)?(','tfpdef('='test)?)*(','('**'tfpdef(',')?)?)?|'**'tfpdef(',')?)
typedargslist
(':'test)
tfpdef
(','vfpdef('='test)?)
(vfpdef)
('**'vfpdef(',')?)
(','('**'vfpdef(',')?)?)
('*'(vfpdef)?(','vfpdef('='test)?)*(','('**'vfpdef(',')?)?)?|'**'vfpdef(',')?)
(','('*'(vfpdef)?(','vfpdef('='test)?)*(','('**'vfpdef(',')?)?)?|'**'vfpdef(',')?)?)
(vfpdef('='test)?(','vfpdef('='test)?)*(','('*'(vfpdef)?(','vfpdef('='test)?)*(','('**'vfpdef(',')?)?)?|'**'vfpdef(',')?)?)?|'*'(vfpdef)?(','vfpdef('='test)?)*(','('**'vfpdef(',')?)?)?|'**'vfpdef(',')?)
varargslist
vfpdef
stmt
(';'small_stmt)
(';')
simple_stmt
(expr_stmt|del_stmt|pass_stmt|flow_stmt|import_stmt|global_stmt|nonlocal_stmt|assert_stmt)
small_stmt
(yield_expr|testlist)
(yield_expr|testlist_star_expr)
('='(yield_expr|testlist_star_expr))
(annassign|augassign(yield_expr|testlist)|('='(yield_expr|testlist_star_expr))*)
expr_stmt
annassign
(test|star_expr)
(','(test|star_expr))
testlist_star_expr
('+='|'-='|'*='|'@='|'/='|'%='|'&='|'|='|'^='|'<<='|'>>='|'**='|'//=') => :: operator_assignment
augassign
del_stmt
pass_stmt
flow_stmt
break_stmt
continue_stmt
(testlist)
return_stmt
yield_stmt
('from'test)
(test('from'test)?)
raise_stmt
import_stmt
import_name
('.'|'...')
(('.'|'...')*dotted_name|('.'|'...')+)
('*'|'('import_as_names')'|import_as_names)
('from'(('.'|'...')*dotted_name|('.'|'...')+)'import'('*'|'('import_as_names')'|import_as_names)) => :: from_import
import_from
('as'NAME)
import_as_name
dotted_as_name
(','import_as_name)
import_as_names
(','dotted_as_name)
dotted_as_names
('.'NAME)
dotted_name
(','NAME)
global_stmt
nonlocal_stmt
(','test)
assert_stmt
compound_stmt
(funcdef|with_stmt|for_stmt)
async_stmt
('elif'test':'suite)
('else'':'suite)
if_stmt
while_stmt
for_stmt
(except_clause':'suite)
('finally'':'suite)
((except_clause':'suite)+('else'':'suite)?('finally'':'suite)?|'finally'':'suite)
('try'':'suite((except_clause':'suite)+('else'':'suite)?('finally'':'suite)?|'finally'':'suite))
try_stmt
(','with_item)
with_stmt
('as'expr)
with_item
(test('as'NAME)?)
except_clause
suite
('if'or_test'else'test)
test
test_nocond
(varargslist)
lambdef
lambdef_nocond
('or'and_test)
or_test
('and'not_test)
and_test
not_test
(comp_opexpr)
comparison
comp_op
star_expr
('|'xor_expr)
expr
('^'and_expr)
xor_expr
('&'shift_expr)
and_expr
('<<'|'>>')
(('<<'|'>>')arith_expr)
shift_expr
('+'|'-')
(('+'|'-')term)
arith_expr
('*'|'@'|'/'|'%'|'//')
(('*'|'@'|'/'|'%'|'//')factor)
term
('+'|'-'|'~')
factor
('**'factor)
power
(AWAIT)
atom_expr
(yield_expr|testlist_comp)
(testlist_comp)
(dictorsetmaker)
NUMBER
STRING
('('(yield_expr|testlist_comp)?')'|'['(testlist_comp)?']'|'{'(dictorsetmaker)?'}'|NAME|NUMBER|STRING+|'...'|'None'|'True'|'False')
atom
(comp_for|(','(test|star_expr))*(',')?)
testlist_comp
trailer
(','subscript_)
subscriptlist
(test)
(sliceop)
subscript_
sliceop
(expr|star_expr)
(','(expr|star_expr))
exprlist
testlist
(test':'test|'**'expr)
(','(test':'test|'**'expr))
(comp_for|(','(test':'test|'**'expr))*(',')?)
((test':'test|'**'expr)(comp_for|(','(test':'test|'**'expr))*(',')?))
((test|star_expr)(comp_for|(','(test|star_expr))*(',')?))
(((test':'test|'**'expr)(comp_for|(','(test':'test|'**'expr))*(',')?))|((test|star_expr)(comp_for|(','(test|star_expr))*(',')?)))
dictorsetmaker
classdef
(','argument)
arglist
(comp_for)
(test(comp_for)?|test'='test|'**'test|'*'test)
argument
comp_iter
(ASYNC)
(comp_iter)
comp_for
comp_if
encoding_decl
(yield_arg)
yield_expr
yield_arg
