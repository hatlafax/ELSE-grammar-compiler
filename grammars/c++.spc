#regex:.                         => :: .
#regex:.                         => :: ,
#regex:.                         => :: :
#regex:.                         => :: ;
#regex:(e|E|p|P|\')              => :: {sign}
#regex:(e|E|p|P)                 => :: [sign]
#{module_name_qualifier}         => :: {
#[module_name_qualifier]         => :: {identifier}
#:                               => :: [module_name_qualifier]
#.                               => :: {digit}
#{                               => :: {
#}                               => :: }
#\\u                             => :: {
#\\U                             => :: {
#<                               => :: {h_char}
#"                               => :: {q_char}
#{h_char}                        => :: >
#{q_char}                        => :: "
#{pp_number}                     => :: <any>
#_literal}                       => :: [integer_suffix]
#_literal}                       => :: {ud_suffix}
#0b                              => :: {binary_digit}
#0B                              => :: {binary_digit}
#[simple_quote_char]             => :: {
#{hexadecimal_prefix}            => :: {hexadecimal_digit_sequence}
#{hexadecimal_digit_sequence}    => :: [
#_suffix}                        => :: [
#[encoding_prefix]               => :: \'
#\\                              => :: {simple_escape_sequence_char}
#_digit}                         => :: {
#\\x                             => :: {hexadecimal_digit}
#}                               => :: [exponent_part]
#}                               => :: {binary_exponent_part}
#}                               => :: [floating_point_suffix]
#]                               => :: [floating_point_suffix]
#}                               => :: {ud_suffix}
#[sign]                          => :: {digit_sequence}
#{digit_sequence}                => :: [simple_quote_char]
#[encoding_prefix]               => :: "
#[encoding_prefix]               => :: R
#"                               => :: [s_char]
#R                               => :: {raw_string}
#"                               => :: [d_char]
#[d_char]...                     => :: (
#(                               => :: [r_char]
#[r_char]...                     => :: )
#)                               => :: [d_char]
#[d_char]...                     => :: "
#(                               => :: {expression}
#{expression}                    => :: )
#(                               => :: {constant_expression}
#{constant_expression}           => :: )
#~                               => :: {type_name}
#~                               => :: {computed_type_specifier}
#{template_parameter_list}       => :: >
#>                               => :: [requires_clause]
#[                               => :: [lambda_capture]
#(                               => :: {parameter_declaration_clause}
#{parameter_declaration_clause}  => :: )
#{identifier}                    => :: [three_dots]
#&                               => :: {identifier}
#&                               => :: ...
#(                               => :: {cast_expression}
#{cast_expression}               => :: )
#typeid(                         => :: {type_id}
#{type_id}                       => :: )
#{unary_operator}                => :: {cast_expression}
#++                              => :: {cast_expression}
#--                              => :: {cast_expression}
#sizeof(                         => :: {type_id}
#alignof(                        => :: {type_id}
#([expression_list]              => :: )

