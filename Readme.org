#+HTML:<div align=center><a href="https://github.com/hatlafax/ELSE-grammar-compiler"><img alt="Emacs Logo" width="240" height="240" src="https://upload.wikimedia.org/wikipedia/commons/0/08/EmacsIcon.svg"></a>

#+HTML:</div>

* Antrl v4 grammar to Emacs ELSE template compiler

This is prototype of a compiler that translate Antrl v4 language grammars to Emacs ELSE mode LSE template files.

This is work in progress and currently not for production use.

* Installation

- Install Python
- Install the antlr4 python runtime

  #+begin_example
  pip install antlr4-python3-runtime
  #+end_example

* Usage

  Get help about the command line options:

  #+begin_example
  python Antlr4ToElseCompiler.py -h
  #+end_example

  Typically used commands for compiling a grammar to an ELSE template lse file. Option =-i= specifies the
  input directory for the =*.g4= grammar files. Option =-o= specifies the output directory for the produced
  =.lse= ELSE template file. Option =-l= specifies the ELSE language and therefore the name of the =.lse=
  file. 

  Options =-p= and =-I=, punctuation characters and valid identifier characters are specified for the proper
  ELSE language specification.

  Finally, option =-v= causes the compiler to procuce verbose log ouput.

  #+begin_example
  python Antlr4ToElseCompiler.py -i ./grammars -o ./out -l Python -p "*(),;:" -I "a-zA-Z_0-9-" Python3Parser.g4 Python3Lexer.g4
  python Antlr4ToElseCompiler.py -i ./grammars -o ./out -l Python -p "*(),;:" -I "a-zA-Z_0-9-" -v Python3Parser.g4 Python3Lexer.g4
  #+end_example

  The compiler also allows batch processing of grammar files. This works for the grammar files provided 
  in the grammar directory, because the language option for these grammars is known by the compiler.
  However, this is useful for testing and not meant for final template file generation because additional
  command lines are naively defaulted.

  #+begin_example
  python Antlr4ToElseCompiler.py -i ./grammars -o ./out -b
  #+end_example
  
* Dependencies
- [[https://www.antlr.org/][ANTLR v4]] >= 4.9.2

  The Antlr v4 Python parser code was generated with Antlr v4 4.9.2.

- [[https://www.python.org/][Python]] >= 3.8.5
- [[https://pypi.org/project/antlr4-python3-runtime/][antlr4-python3-runtime 4.9.2]]
- [[https://www.gnu.org/software/emacs/][Emacs]] >= 27
- [[https://github.com/peter-milliken/ELSE][Emacs ELSE]] v2
- [[https://github.com/antlr/grammars-v4][ANTLR v4 grammars]]

  The grammars found in the grammar folder of this repository are copies from the [[https://github.com/antlr/grammars-v4][ANTLR v4 grammars].
  They are provided only for simplifying testing. They will not be synchronized with future changes.

  There is no single license for the grammars, each grammar has its own license. Check inside the grammar files for licensing terms.

  See also: [[https://github.com/antlr/grammars-v4/wiki][ANTLR v4 grammars Wiki]]

* Disclaimer

 This is an experimental project. Do not rely on it. It is work in progress and it is open if this will lead to a valuable software component.

* Limitations / Known Issues

- Tested on Windows operating system only
- LSE template files generated are semantically not usable.

* License: Boost Software License 1.0

- [[https://github.com/hatlafax/ELSE-grammar-compiler/blob/main/LICENSE][Boost Software License - Version 1.0 - August 17th, 2003]]

- The grammars found in the grammar folder of this repository are copies from the [[https://github.com/antlr/grammars-v4][ANTLR v4 grammars].
  There is no single license for the grammars, each grammar has its own license. Check inside the grammar files for licensing terms.
